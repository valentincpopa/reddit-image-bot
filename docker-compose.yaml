services:

  # Jaeger
  jaeger-all-in-one:
    container_name: jaeger-all-in-one
    image: jaegertracing/all-in-one:latest
    environment:
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Collector
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - prometheus

  # Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
      
  # Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    restart: always
    ports:
      - "3000:3000"
  
  # Postgres server
  postgres-server:
    container_name: postgres-server
    image: postgres
    healthcheck:
      test: >
        pg_isready \
          --host=localhost \
          --port=5432 \
          --dbname=${POSTGRES_DB} \
          --username=${POSTGRES_USER}
      interval: "2s"
      timeout: "5s"
      retries: 5
      start_period: "1s"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    ports:
      - "5432:5432"
  
  # Pgadmin
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    restart: always
    ports:
      - "8090:80"
    depends_on:
      postgres-server:
        condition: service_healthy